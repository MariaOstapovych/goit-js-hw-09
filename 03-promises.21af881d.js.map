{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,WAGA,MAAMC,EAAOC,SAASC,cAAc,SACpCC,QAAQC,IAAIJ,GAEZA,EAAKK,iBAAiB,UAAWC,IAC/BA,EAAMC,iBAEN,MAAMC,EAAQC,SAAST,EAAKU,SAASC,MAAMC,OACrCC,EAAOJ,SAAST,EAAKU,SAASG,KAAKD,OACnCE,EAASL,SAAST,EAAKU,SAASI,OAAOF,OAG7C,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,GAAG,EAAG,CAEhBC,EADCD,EAAI,EACmBP,EAAQO,EAAIF,GAGjDI,MAAK,EAACC,SAAEA,EAAQP,MAAEA,MACjBQ,EAAArB,GAASsB,OAAOC,QAAQ,uBAAqBH,QAAiBP,MAAU,IAEzEW,OAAM,EAACJ,SAAEA,EAAQP,MAAEA,MAClBQ,EAAArB,GAASsB,OAAOG,QAAQ,sBAAoBL,QAAeP,MAAU,G,CAI3E,SAASK,EAAcE,EAAUP,GAC/B,OAAO,IAAIa,SAAQ,CAACC,EAASC,KAC7B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEP,E,MAAUP,IAEpBe,EAAO,C,SAAER,E,MAAUP,GAAQ,GAE5BA,EAAM,G,CAIXX,EAAK+B,OAAO","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector(\".form\")\nconsole.log(form);\n\nform.addEventListener(\"submit\", (event) => {\n  event.preventDefault();\n\n  const delay = parseInt(form.elements.delay.value);\n  const step = parseInt(form.elements.step.value);\n  const amount = parseInt(form.elements.amount.value);\n\n\n  for (let i = 0; i < amount; i+=1) {\n    const position = i + 1;\n    const promise = createPromise(position, delay + i * step);\n\n    promise\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n\n  function createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  }\n\n  form.reset();\n})\n\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","console","log","addEventListener","event","preventDefault","delay1","parseInt","elements","delay","value","step","amount","i","createPromise","then","position","$parcel$interopDefault","Notify","success","catch","failure","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","reset"],"version":3,"file":"03-promises.21af881d.js.map"}